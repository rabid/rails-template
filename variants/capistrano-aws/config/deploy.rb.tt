require_relative "../lib/aws_helper"

# config valid for current version and patch releases of Capistrano
lock "~> 3.11.0"

set :application, ENV["APP_NAME"] 
set :repo_url, ENV["REPO_URL"]

# Default branch is :main
# ask :branch, `git rev-parse --abbrev-ref HEAD`.chomp
set :user, "deploy"

# Default deploy_to directory is /var/www/my_app_name
set :deploy_to, "/home/#{fetch(:user)}/safeplus" # TODO replace with ENV

# Default value for :format is :airbrussh.
# set :format, :airbrussh

# You can configure the Airbrussh format using :format_options.
# These are the defaults.
# set :format_options, command_output: true, log_file: "log/capistrano.log", color: :auto, truncate: :auto

# Default value for :pty is false
# set :pty, true

# Default value for :linked_files is []
append :linked_files, ".env"

# Default value for linked_dirs is []
append :linked_dirs, "log", "tmp/pids", "tmp/cache", "tmp/sockets", "public/system"

##
# Roles
#
# We have a single :app role which contains all the servers we care about in
# this deployment.
#
# We run nginx, rails on the same servers so we do not need the distinction
# between the :web and :app roles that Capistrano encourages by default.
#
# We manage the database servers via RDS so Capistrano is not involved at all
# so we don't need a separate :db role either
#
set :assets_roles, [:app] # defaults to [:web]
set :migration_role, :app # defaults to :db

# Default value for default_env is {}
set :default_env, path: "$HOME/.rbenv/shims:$HOME/.rbenv/bin:$PATH"

set :rbenv_type, :user
set :rbenv_ruby, File.read(".ruby-version").strip
set :rbenv_prefix,
    "RBENV_ROOT=#{fetch(:rbenv_path)} RBENV_VERSION=#{fetch(:rbenv_ruby)} #{fetch(:rbenv_path)}/bin/rbenv exec"
set :rbenv_map_bins, %w[rake gem bundle ruby rails]

# Default value for local_user is ENV['USER']
# set :local_user, -> { `git config user.name`.chomp }

# Default value for keep_releases is 5
# set :keep_releases, 5

# Uncomment the following to require manually verifying the host key before first deploy.
# set :ssh_options, verify_host_key: :secure

namespace :deploy do
  desc "Restart application"
  task :restart do
    on roles(:app), in: :sequence, wait: 5 do
      execute :sv, "2", "/home/#{fetch(:user)}/sv/#{fetch(:application)}"
      execute :sv, :restart, "/home/#{fetch(:user)}/sv/sidekiq"
    end
  end

  task :start do
    on roles(:app) do
      execute :sv, :start, "/home/#{fetch(:user)}/sv/#{fetch(:application)}"
      execute :sv, :start, "/home/#{fetch(:user)}/sv/sidekiq"
    end
  end

  task :stop do
    on roles(:app) do
      execute :sv, :stop, "/home/#{fetch(:user)}/sv/#{fetch(:application)}"
      execute :sv, :stop, "/home/#{fetch(:user)}/sv/sidekiq"
    end
  end

  after :publishing, :restart
end
